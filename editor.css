/* D2L editor styles */

/* These styles are repeated in the stylesheet but the D2L editor
	does not read the stylesheet so these are used to make the
	editor more user-friendly */
	
/* Would Like to number codelines in the editor for class!="nn" but there are two issues:
	1) A class is only put on the first codelines
	2) Codelines can be separate H6 objects or have <br> -- the latter happens on copy/paste
	
	Even if the codelines were all H6, there is no contiguouos style in CSS (i.e., no way to say
	"apply this style to grouped objects of a certain type").  There is a hacky way to do -- you
	need to use the h6 h6 h6... for each number of possible contiguous h6 values.  So, if there is
	a possibility of 100 lines of code, you need 100 object command , the last one being h6 repeated
	100 times.
	
	And, this gets even more complicated by the <br>
*/


body
{
	counter-reset: h2Count figCount eqCount;
	font-size: 14px; 
}
/* Only add previous and next lines in the editor if you are editing a lesson,
   not if you are editing the front page */
body[aria-label~="Document"]>p:first-child, .pl, .previousLesson
{
	background-color: powderblue;
}
body[aria-label~="Document"]>p:first-child::before
{
	content: "Previously: "; 
	font-style: italic;
	font-weight: bold;
	color: rgb(50,0,0);
}
body[aria-label~="Document"]>p:first-child + p, .nl, .nextLesson
{
	background-color: powderblue;
}
body[aria-label~="Document"]>p:first-child + p::before
{
	content: "Up Next: "; 
	font-style: italic;
	font-weight: bold;
	color: rgb(50,0,0);
}
h2::before 
{
  counter-increment: h2Count;               
  content: counter(h2Count) "- ";              
}
h3::before 
{
  counter-increment: h3Count;               
  content: counter(h2Count) "-" counter(h3Count) " ";    
}	
h4::before 
{
  counter-increment: h4Count;               
  content: counter(h2Count) "-" counter(h3Count) "-" counter(h4Count) " ";
}	
h5.eqNum::after, span[style*="dotum"]>.equation::after, span[style*="dotum"]::after
{
  counter-increment: eqCount;               
  content: " ( " counter(eqCount) " )";  
}
.eqNum:not(h5)::after
{
  counter-increment: eqCount;               
  content: "( " counter(eqCount) " )";  
  text-decoration: none; /* does not work -- is there another way? */
}
.figNum::before, h5:not([class])::before, h5[class='']::before, .fig::before
{
  counter-increment: figCount;               
  content: "Fig " counter(figCount) ": ";  
}

/* span with font type dotum whose first-child is an image with the class equation */
span[style*="dotum"] > img.equation:first-child
{
	border-color: green;
	border-style: dashed;
	border-width: 1px;
}
h1  
{ 
	color: rgb(0,0,100); 
	width: 100%; 
} 
h2
{ 
	margin-top: 15px; 
	color: rgb(100,0,0); 
	text-align: left; 
	background-color: rgb(220,220,220); 
	counter-reset: h3Count;
}
h2.extension, h2.trap
{
	color: rgb(80,15,15); 
}
h3
{ 
	margin-top: 15px; 
	color: rgb(0,0,100); 
	background-color: rgb(220,220,220); 
	counter-reset: h4Count;
}
h4
{ 	
	margin-top: 15px; 
	color: rgb(0,70,0); 
	background-color: rgb(220,220,220); 
}
h5, .fig, .caption, .figureRef, .eqNum, .eqRef, .sectRef, .ref, .reference, span[style*="dotum"]::after, span[style*="dotum"]::before
{ 
	font-style: italic; 
	color: rgb(0,100,0); 
	margin: 0; 
	padding: 0; 
	font-weight: normal; 
	font-size: 14px; 
}
blockquote
{
	/* these values will be overridden in D2L if important is not there */
	margin-left: 0 !important; 
	padding-left: 0 !important; 
	border-left-width: 0px !important;
}
blockquote > p
{
	/*display: inline;*/ 
}
p
{ 
	margin:0px; 
}
ul,ol
{ 
	margin-left: -20px; /* unsure what in D2L editor is indenting ol, ul by 20px */
	margin-top: 0px; 
	padding-top: 0px; 
	margin-bottom:0px; 
	padding-bottom: 0px; 
}

ul, ul ul ul, ul ul ul ul ul
{	
	list-style-type: disc; 
}

ul ul, ul ul ul ul, ul ul ul ul ul ul
{	
	list-style-type: circle; 
}

ol, ol ol ol, ol ol ol ol ol, ol ol ol ol ol ol ol
{	
	list-style-type: number; 
}

ol ol, ol ol ol ol, ol ol ol ol ol ol
{	
	list-style-type: upper-alpha; 
}

.hl,.highlight
{
	color: darkred;
	font-style: italic;
}
h6[title], blockquote[title]
{
	color: white;
}
h6 .hl, h6 .highlight, h6.hl, h6.highlight,
blockquote .hl, blockquote .highlight, blockquote.hl, blockquote.highlight
{
	color: yellow;
}
h6 .note, h6.note, blockquote .note, blockquote.note
{
	color: orange;
}
h6 .ref, h6.ref, blockquote .ref, blockquote.ref
{
	color: lime;
}
h6 a, blockquote a
{
	color: YellowGreen;
}
img.flexSize, img.fs
{ 
	height: 100px; 
}
img.flexSize:hover, img.fs:hover
{ 
	height: 400px; 
}
.linkTo
{	
	color: rgb(0,0,200);	
}
h6, blockquote
{
	/* white-space caused the no spaces added error in editor */
	/* white-space: pre-wrap; */
	word-wrap: break-word;
	/*padding-bottom: 0px;*/

	display: block;
	line-height: 1.7em;	
	font-style: normal;	
	font-weight: normal;	
	margin: 0;
	padding: 0;
	font-size: 14px;
	color: rgb(100,255,255);
	background: linear-gradient(90deg, rgb(33,33,33) 663px, 
	                            rgb(100,100,100) 0, rgb(100,100,100) 100%);
	/*background-color: rgb(33,33,33);*/
	font-family: monospace;
}
h6:empty, blockquote:empty
{
	min-height: 1.7em;
	background-color: red; /* just to warn user that something is wrong */
}
/* there should never be an [h6] within an [h6],
   if there is, the text in the section will turn red as a warning.
	At this point, the person should hit undo on the editor */
h6>br,h6>h6, blockquote>br, blockquote>blockquote
{
	color: red;
}
.bib
{
	padding-left: 20px; 
	text-indent: -20px;
}	
.figureRef, .fr, .eqNum:not(h5)::before, .eqRef /*, .sectRef */
{
	text-decoration: line-through;
}
/* References that have text but no IDs */
.figureRef:not([id]):not(empty)::before, .eqRef:not([id]):not(empty)::before, 
.sectRef:not([id]):not(empty)::before, .linkTo:not([id]):not(empty)::before,
.ref:not([id]):not(empty)::before, .reference:not([id]):not(empty)::before
{
	content: "Ref w/o ID-";
	background-color: yellow;
	color: red;
	font-weight: bold;
}
.note
{
	color: rgb(160,64,0);
	font-style: italic;
}
.p, .partial, h6.partial + h6, blockquote.partial + blockquote
{
	color: orange;
}
.nn, .nonum, h6.nn + h6, blockquote.nn + blockquote
{
	color: rgb(255,110,110);
}
.email
{
	color: rgb(0,0,150);
	text-decoration: underline;
	cursor: pointer;
}

/* almost always a copy/paste issue in the editor 
   divs should not be in the editor */
div:not([class]):not([id])
{
	border-style: dashed;
	border-color: red;
	border-width: 1px;
}

table.frontPage td
{
/*	box-shadow: 0 0 0 8px #bbb;
	border-radius: 10px;
	border-width: 0px;
	padding: 5px;
	background-color: #eee;*/
	vertical-align: top;
	font-size: 16px;
}

td ul, td ol
{
	padding-left: 2em;
	margin-top: 0;
}